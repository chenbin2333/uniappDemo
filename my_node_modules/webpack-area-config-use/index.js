const fs = require('fs');
const path = require('path');
const AREA_CONFIGS = require("./areaConfig");
const os = require("os");

function fixZero(v) {
    if (v < 10) {
        return '0' + v
    }
    return v
}

class WebpackAreaConfigUse {
    constructor(options) {

        // this.config = Object.assign(options);
        console.log("--------webpack-area-config-use-------")

        console.log(process.env)

        if (!process.env.AREA_CONFIG_NAME) {
            return
          }

        console.log(process.env.AREA_CONFIG_NAME)

        // console.log(AREA_CONFIGS)

        this.config = AREA_CONFIGS[process.env.AREA_CONFIG_NAME]

        console.log(this.config)

        const templateFilePath = path.join(__dirname, 'manifest_template.json')

        // console.log(templateFilePath)

        const outputFilePath = path.join('src', 'manifest.json')
        // console.log(outputFilePath)

        let data = fs.readFileSync(templateFilePath, 'utf-8')
        // console.log(data)

        let date = new Date();

        const dateSimple = date.getFullYear() + "." +
            fixZero(date.getMonth() + 1) + "." +
            fixZero(date.getDate())
            // + "." +
            // fixZero(date.getHours()) + "." +
            // fixZero(date.getMinutes())

        data = data
            .replace('%CONFIG_APP_NAME%', this.config.APP_NAME_CN || '政务协同办公系统')
            .replace('%CONFIG_APPID%', this.config.APPID || '__UNI__11ED93F')

            .replace('%APP_VERSION_NAME%', dateSimple)
            .replace('%CONFIG_MPWX_ID%', this.config.MPWX_ID)
            .replace('%APP_VERSION_CODE%', dateSimple.replace(/\./g,''))

            .replace('%CONFIG_APP_BASE_URL%', this.config.ROUTER_BASE)
            .replace('%CONFIG_APP_AREA_NAME%', this.config.APP_NAME)
            .replace('%CONFIG_AREA_CONFIG_NAME%', process.env.AREA_CONFIG_NAME)
            .replace('%CONFIG_APP_SERVER_PROXY%', AREA_CONFIGS.SERVER_PROXY)
            .replace('%APP_BUILD_TIME%', date.toLocaleString())
            .replace('%APP_BUILD_HOST%', os.hostname() || '')
            .replace('%CONFIG_IS_TEST_ENV%', AREA_CONFIGS.IS_TEST_ENV)

        fs.writeFileSync(outputFilePath, data)


        // const envTemplateFilePath = path.join(__dirname, 'env_template')
        // let envData = fs.readFileSync(envTemplateFilePath, 'utf-8')

        // console.log(templateFilePath)
        let uniplatform = process.env.UNI_PLATFORM
        const outputEnvFilePath = path.join('src/config', 'env_' + uniplatform + '.js')
        let envName = ''
        switch (uniplatform) {
          case 'h5':
            envName = 'ENV_H5'
            break
          case 'mp-weixin':
            envName = 'ENV_MP'
            break
        }
        const envData = `const ${envName}={config:${JSON.stringify(this.config)},AREA_CONFIG_NAME:"${process.env.AREA_CONFIG_NAME}"};export default ${envName}`

        fs.writeFileSync(outputEnvFilePath, envData)
    }

    apply(compiler) {
        console.log("WebpackAreaConfigUse apply")

        compiler.hooks.environment.tap('WebpackAreaConfigUse', (compilation) => {


        });
    }

}

module.exports = WebpackAreaConfigUse;